---
import PastWeatherDay from "../../components/PastWeatherDay.astro";
import {
  PastWeatherDayData,
  ForecastData,
} from "../../util/weather-data-types";
import Layout from "../../layouts/Layout.astro";
import CurrentWeather from "../../components/CurrentWeather.astro";
import Forecast from "../../components/Forecast.astro";
import { mmToIn } from "../../util/mappers";
import { TextData } from "../../components/data";
import { Area } from "../../util/areas";

export const prerender = false;

const { slug } = Astro.params;
const queryString = Astro.url.search;

const response = await fetch(
  // @ts-ignore
  `${import.meta.env.PUBLIC_API_URL}/api/${slug}.json${queryString}`
);
const {
  area,
  pastWeather,
  forecast,
}: { area: Area; pastWeather: PastWeatherDayData[]; forecast: ForecastData } =
  await response.json();

// TODO: error handling here

const precipLast3Days = mmToIn(
  pastWeather
    .slice(0, -1)
    .reduce((acc, day) => acc + day.precipitation.total ?? 0, 0)
);
const precipToday =
  pastWeather[pastWeather.length - 1].precipitation.total ?? 0;
---

<Layout>
  <div class="header">
    <h1>Weather for: <TextData>{area.name}</TextData></h1>
    <h3 class="location">
      <TextData>{forecast.lat}°, {forecast.lon}°</TextData>
    </h3>
  </div>

  <h3>All times in local time: <TextData>{forecast.timezone}</TextData></h3>
  <CurrentWeather data={{ ...forecast.current, precip: precipToday }} />
  <hr />
  <h3>Past 3 Days</h3>
  <strong>total precipitation:</strong>
  <TextData>{precipLast3Days}"</TextData>
  <div class="past-weather-container">
    {
      pastWeather
        .slice(0, -1)
        .map((day, index) => (
          <PastWeatherDay
            label={index === pastWeather.length - 2 ? "Yesterday" : undefined}
            data={day}
          />
        ))
    }
  </div>
  <hr />
  <Forecast
    hourly={forecast.hourly}
    daily={forecast.daily}
    timezone={forecast.timezone}
  />
</Layout>

<style lang="scss">
  .header {
    width: max-content;
    h1,
    h3 {
      margin: 0;
    }
    .location {
      text-align: right;
    }
  }

  .past-weather-container {
    display: flex;
    flex-direction: row;
    max-width: 95vw;
    overflow-x: auto;
  }
</style>
