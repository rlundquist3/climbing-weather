---
import type { CurrentWeatherData } from "../util/weather-data-types";
import { getCardinalDirectionFromDegrees, mmToIn } from "../util/mappers";
import Thermometer from "./data/Thermometer.astro";
import DataContainer from "./data/DataContainer.astro";
import Precipitation from "./data/Precipitation.astro";
import Wind from "./data/Wind.astro";
import Humidity from "./data/Humidity.astro";
import UVIndex from "./data/UVIndex.astro";
import CloudCover from "./data/CloudCover.astro";
import TextData from "./data/TextData.astro";

type Props = { data: CurrentWeatherData };

const { data } = Astro.props;
---

<div class="current-weather-container">
  <h3>Current</h3>
  <p>{data.weather[0].description}</p>
  <div class="inner-container">
    <Thermometer value={data.temp} feelsLike={data.feels_like} type="current" />
    {
      isFinite(data.rain?.["1h"]) && (
        <Precipitation label="rain last hr" value={mmToIn(data.rain["1h"])} />
      )
    }
    {
      isFinite(data.snow?.["1h"]) && (
        <Precipitation label="snow last hr" value={mmToIn(data.snow["1h"])} />
      )
    }
    {
      isFinite(data.pop) && (
        <div>
          <>
            <label style={{ fontSize: "0.75rem" }}>chance precip:</label>
            <br />
          </>
          <TextData>{data.pop}%</TextData>
        </div>
      )
    }
    <Humidity value={data.humidity} } />
    <Thermometer value={data.dew_point} type="dew point" />
    <CloudCover value={data.clouds} />
    <UVIndex value={data.uvi} />
    <Wind direction={data.wind_deg} speed={data.wind_speed} />
  </div>
</div>

<style lang="scss">
  .current-weather-container {
  }
  .inner-container {
    display: flex;
  }
</style>
