---
import type {
  ForecastData,
  HourlyForecastItem,
} from "../util/weather-data-types";
import { getWeatherImage, mmToIn } from "../util/mappers";
import { DateTime } from "luxon";
import {
  ChancePrecip,
  CloudCover,
  DataContainer,
  Humidity,
  Precipitation,
  TextData,
  Thermometer,
  UVIndex,
  Wind,
} from "./data";

type Props = { data: HourlyForecastItem; timezone: ForecastData["timezone"] };

const { data, timezone } = Astro.props;
const time = DateTime.fromSeconds(data.dt, {
  zone: timezone,
}).toLocaleString(DateTime.TIME_24_SIMPLE);
const weatherImage: string | undefined = getWeatherImage(data);
---

<div class="hourly-forecast-item">
  <div class="header">
    <div>
      <h3>
        <time datetime={time}>{time}:</time>
      </h3>
      <h4><TextData>{data.weather[0].description}</TextData></h4>
    </div>
    {
      weatherImage && (
        <img src={weatherImage} alt={data.weather[0].description} />
      )
    }
  </div>

  <DataContainer>
    <Thermometer value={data.temp} feelsLike={data.feels_like} type="current" />
    <div class="precip-container">
      {isFinite(data.pop) && <ChancePrecip value={data.pop} />}
      <div>
        {
          isFinite(data.rain?.["1h"]) && (
            <Precipitation label="rain" value={mmToIn(data.rain["1h"])} />
          )
        }
        {
          isFinite(data.snow?.["1h"]) && (
            <Precipitation label="snow" value={mmToIn(data.snow["1h"])} />
          )
        }
      </div>
    </div>

    <Humidity value={data.humidity} } />
    <Thermometer value={data.dew_point} type="dew point" />
    <UVIndex value={data.uvi} />
    <Wind direction={data.wind_deg} speed={data.wind_speed} />
    <CloudCover value={data.clouds} />
  </DataContainer>
</div>

<style lang="scss">
  .hourly-forecast-item {
    border-radius: 8px;
    box-shadow: 4px 4px 12px #000000;
    margin: 0.5rem;
    max-height: calc(100% - 2rem);
    padding: 0 1rem 1rem;
  }
  .header {
    display: flex;
    justify-content: space-between;
  }
  h3 {
    margin-bottom: 0;
  }
  h4 {
    margin-top: 0;
  }
  .precip-container {
    align-items: center;
    display: flex;
    justify-content: center;
    width: 100%;

    div {
      display: flex;
      flex-direction: column;
      height: 120px;
      justify-content: space-around;
    }
  }
</style>
