---
import type { HourlyForecastItem } from "../util/weather-data-types";
import { getWeatherImage, mmToIn, weatherImageMap } from "../util/mappers";
import { DateTime } from "luxon";
import DataContainer from "./data/DataContainer.astro";
import Thermometer from "./data/Thermometer.astro";
import Precipitation from "./data/Precipitation.astro";
import TextData from "./data/TextData.astro";
import Wind from "./data/Wind.astro";
import CloudCover from "./data/CloudCover.astro";
import Humidity from "./data/Humidity.astro";
import UVIndex from "./data/UVIndex.astro";
import ChancePrecip from "./data/ChancePrecip.astro";

type Props = { data: HourlyForecastItem };

const { data } = Astro.props;
const weatherImage: string | undefined = getWeatherImage(data);
---

<div class="hourly-forecast-item">
  <div class="header">
    <div>
      <h3>
        <time
          datetime={DateTime.fromSeconds(data.dt).toLocaleString(
            DateTime.TIME_24_SIMPLE
          )}
          >{
            DateTime.fromSeconds(data.dt).toLocaleString(
              DateTime.TIME_24_SIMPLE
            )
          }:</time
        >
      </h3>
      <h4>{data.weather[0].description}</h4>
    </div>
    {
      weatherImage && (
        <img src={weatherImage} alt={data.weather[0].description} />
      )
    }
  </div>

  <DataContainer>
    <Thermometer value={data.temp} feelsLike={data.feels_like} type="current" />
    {isFinite(data.pop) && <ChancePrecip value={data.pop} />}
    {
      isFinite(data.rain?.["1h"]) && (
        <Precipitation label="rain" value={mmToIn(data.rain["1h"])} />
      )
    }
    {
      isFinite(data.snow?.["1h"]) && (
        <Precipitation label="snow" value={mmToIn(data.snow["1h"])} />
      )
    }
    <Humidity value={data.humidity} } />
    <Thermometer value={data.dew_point} type="dew point" />
    <UVIndex value={data.uvi} />
    <Wind direction={data.wind_deg} speed={data.wind_speed} />
    <CloudCover value={data.clouds} />
  </DataContainer>
</div>

<style lang="scss">
  .hourly-forecast-item {
    border-radius: 8px;
    box-shadow: 4px 4px 12px #000000;
    margin: 0.5rem;
    max-height: calc(100% - 2rem);
    padding: 0 1rem 1rem;
  }
  .header {
    display: flex;
    justify-content: space-between;
  }
  h3 {
    margin-bottom: 0;
  }
  h4 {
    margin-top: 0;
  }
</style>
