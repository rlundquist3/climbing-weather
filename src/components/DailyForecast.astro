---
import type { DailyForecastItem } from "../util/weather-data-types";
import { getCardinalDirectionFromDegrees, mmToIn } from "../util/mappers";
import { DateTime } from "luxon";
import DataContainer from "./data/DataContainer.astro";
import Thermometer from "./data/Thermometer.astro";
import TextData from "./data/TextData.astro";
import Precipitation from "./data/Precipitation.astro";
import CloudCover from "./data/CloudCover.astro";
import Humidity from "./data/Humidity.astro";
import UVIndex from "./data/UVIndex.astro";
import Wind from "./data/Wind.astro";

type Props = { data: DailyForecastItem; label?: string };

const { data, label } = Astro.props;
const orderedTemperatureKeys: (keyof DailyForecastItem["temp"])[] = [
  "min",
  "max",
  "morn",
  "day",
  "eve",
  "night",
];

const tempKeyMap: {
  [Property in keyof DailyForecastItem["temp"]]: {
    type: "low" | "high" | "current" | "dew point";
    label: string;
  };
} = {
  min: { type: "low", label: "low" },
  max: { type: "high", label: "high" },
  morn: { type: "current", label: "morning" },
  day: { type: "current", label: "afternoon" },
  eve: { type: "current", label: "evening" },
  night: { type: "current", label: "night" },
};
---

<div class="daily-forecast-item">
  <h3>
    <time
      datetime={DateTime.fromSeconds(data.dt).toLocaleString(
        DateTime.DATE_FULL
      )}
      >{
        label ??
          DateTime.fromSeconds(data.dt)
            .toLocaleString(DateTime.DATE_MED_WITH_WEEKDAY)
            .split(",")
            .slice(0, -1)
            .join(",")
      }:</time
    >
  </h3>
  <h4>{data.weather[0].description}</h4>
  <DataContainer>
    {
      orderedTemperatureKeys.map((key) => (
        <Thermometer
          value={data.temp[key]}
          feelsLike={data.feels_like[key]}
          type={tempKeyMap[key].type}
          label={tempKeyMap[key].label}
        />
      ))
    }
    {
      isFinite(data.pop) && (
        <div>
          <>
            <label style={{ fontSize: "0.75rem" }}>chance precip:</label>
            <br />
          </>
          <TextData>{data.pop * 100}%</TextData>
        </div>
      )
    }
    {
      isFinite(data.rain) && (
        <Precipitation label="rain" value={mmToIn(data.rain)} />
      )
    }
    {
      isFinite(data.snow) && (
        <Precipitation label="snow" value={mmToIn(data.snow)} />
      )
    }
    <Humidity value={data.humidity} } />
    <Thermometer value={data.dew_point} type="dew point" />
    <UVIndex value={data.uvi} />
    <Wind direction={data.wind_deg} speed={data.wind_speed} />
    <CloudCover value={data.clouds} />
  </DataContainer>
</div>

<style lang="scss">
  .daily-forecast-item {
    border-radius: 8px;
    box-shadow: 4px 4px 12px #000000;
    margin: 0.5rem;
    max-height: calc(100% - 2rem);
    padding: 0 1rem 1rem;
  }
  h3,
  h4 {
    text-align: center;
  }
  h3 {
    margin-bottom: 0;
  }
  h4 {
    margin-top: 0;
  }
</style>
