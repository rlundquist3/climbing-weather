---
import { getCardinalDirectionFromDegrees } from "../../util/mappers";
import TextData from "./TextData.astro";

type Props = { direction: number; speed: number };
const { direction, speed } = Astro.props;

const cardinalDirection = getCardinalDirectionFromDegrees(direction);
---

<div class="container">
  <svg viewBox="0 0 80 80" height="80">
    <g
      style={{
        transform: `rotate(${direction}deg)`,
        "transform-origin": "40px 40px",
      }}
    >
      <circle cx="40" cy="40" r="40"></circle>
      <polygon
        points="40,2,44,10,40,8,36,10"
        stroke="white"
        stroke-width="0.5"
        fill="red"></polygon></g
    >
    <g>
      <path d="M 40,2 v 12" stroke="red" stroke-width="2" stroke-linecap="round"
      ></path>
      <path d="M 74,40 h 5" stroke="white" stroke-linecap="round"></path>
      <path d="M 40,74 v 5" stroke="white" stroke-linecap="round"></path>
      <path d="M 6,40 h -5" stroke="white" stroke-linecap="round"></path>
    </g>
    <g>
      <text class="direction-text" x="25" y="25">{cardinalDirection}</text>
      <text class="label-text" x="27" y="40">wind</text>
      <text class="speed-text" x="45" y="55">{speed.toFixed(0)}</text>
      <text class="unit-text" x="45" y="65">mph</text>
    </g>
  </svg>
</div>

<style>
  div.container {
    align-items: flex-end;
    display: flex;
    flex-direction: row;
    margin-top: 1rem;
  }
  text {
    fill: #6be89f;
    font-family: Doto;
  }
  .label-text,
  .speed-text {
    font-size: 0.75rem;
  }
  .unit-text {
    font-size: 0.5rem;
  }
</style>
